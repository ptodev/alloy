name: Create Docker images
on:
  push:
    tags:
      - build-image/v*
jobs:
  test_linux_system_packages:
    name: Test Linux system packages
    runs-on: ubuntu-latest
    container:
      image: grafana/alloy-build-image:v0.1.8
      volumes:
        - /var/run/docker.sock
    steps:
    - name: Free Disk Space (Ubuntu)
      uses: jlumbroso/free-disk-space@main
      with:
        # this might remove tools that are actually needed,
        # if set to "true" but frees about 6 GB
        tool-cache: false
        
        # all of these default to true, but feel free to set to
        # "false" if necessary for your workflow
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: true
        swap-storage: true

    - name: Checkout code
      uses: actions/checkout@v4
    # - name: Set ownership
    #   # https://github.com/actions/runner/issues/2033#issuecomment-1204205989
    #   run: |
    #       # this is to fix GIT not liking owner of the checkout dir
    #       chown -R $(id -u):$(id -g) $PWD
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version-file: go.mod
        cache: false
    # - run: |
    #    export IMAGE_TAG=${DRONE_TAG##build-image/}
    #    docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD
    #    docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    #    docker buildx create --name multiarch --driver docker-container --use
    #    docker buildx build --build-arg="GO_RUNTIME=golang:1.23.5-bullseye" --push --platform
    #    linux/amd64,linux/arm64 -t grafana/alloy-build-image:$IMAGE_TAG ./tools/build-image
  
    - name: Split tag name
      env:
        FULL_TAG: ${{ github.ref_name }}
      id: split_tag
      run: echo "image_version=${FULL_TAG##*/}" >> $GITHUB_OUTPUT

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    # - name: Set up QEMU
    #   uses: docker/setup-qemu-action@v3
    #   with:
    #     image: multiarch/qemu-user-static
    #     platforms: 

    - run: |
       docker run --rm --privileged multiarch/qemu-user-static --reset -p yes     
       docker buildx create --name multiarch --driver docker-container --use
       docker buildx build --build-arg="GO_RUNTIME=golang:1.23.5-bullseye" --push --platform linux/amd64,linux/arm64 -t ptodev/alloy-build-image:${{ steps.split_tag.outputs.image_version }} ./tools/build-image

    # - name: Set up Docker Buildx
    #   uses: docker/setup-buildx-action@v3
    # - name: Build and push
    #   uses: docker/build-push-action@v6
    #   with:
    #     build-args: GO_RUNTIME=golang:1.23.5-bullseye
    #     platforms: linux/amd64,linux/arm64
    #     push: true
    #     tags: user/app:latest
    #     # target: grafana/alloy-build-image:$IMAGE_TAG
    #     target: ptodev/alloy-build-image:$IMAGE_TAG